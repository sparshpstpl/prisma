// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model UnitApplication {
  id                String  @id @default(uuid())
  ownerId           String
  ownerType         String
  applicationType   String
  applicationStatus String
  applicationData   Json?
  businessId        String?
  unitApplicationId String  @unique

  updatedAt               DateTime                  @updatedAt
  createdAt               DateTime                  @default(now())
  UnitApplicationDocument UnitApplicationDocument[]
  UnitRelationship        UnitRelationship[]
}

model UnitCustomer {
  id                String @id @default(uuid())
  ownerId           String
  ownerType         String
  unitCustomerId    String @unique
  unitApplicationId String @unique

  updatedAt        DateTime           @updatedAt
  createdAt        DateTime           @default(now())
  UnitRelationship UnitRelationship[]
}

model UnitApplicationDocument {
  id             String          @id @default(uuid())
  applicationId  String
  application    UnitApplication @relation(fields: [applicationId], references: [id])
  ownerId        String
  ownerType      String
  unitDocumentId String          @unique
  documentId     String?
  status         String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model UnitAccount {
  id              String @id @default(uuid())
  ownerId         String
  ownerType       String
  accountId       String @unique
  accountType     String
  accountStatus   String
  unitCustomerId  String

  updatedAt        DateTime           @updatedAt
  createdAt        DateTime           @default(now())
  UnitRelationship UnitRelationship[]
}

model UnitCounterparty {
  id                 String @id @default(uuid())
  ownerId            String
  ownerType          String
  unitCustomerId     String
  unitCounterpartyId String @unique
  bank               String
  name               String
  accountType        String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model UnitRelationship {
  id                 String              @id @default(uuid())
  unitApplicationId  String
  application        UnitApplication     @relation(fields: [unitApplicationId], references: [unitApplicationId])
  unitCustomerId     String
  customer           UnitCustomer        @relation(fields: [unitCustomerId], references: [unitCustomerId])
  unitAccountId      String
  account            UnitAccount @relation(fields: [unitAccountId], references: [accountId])

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model UnitTransaction {
  transactionId  String @id @default(uuid())
  accountId      String
  counterpartyId String
  amount         String
  description    String
  accountType    String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
